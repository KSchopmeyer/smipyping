#!/usr/bin/env python
# -*- coding: utf-8 -*-

# (C) Copyright 2017 Inova Development Inc.
# All Rights Reserved
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

"""
This script executes the PortSweep functions to sweep a set of ip address
and ports for possible WBEM Servers.

This is a temporary version of the code in a separate script until it is
integrated into a single multi-level script.

NOTE: This script must be executed in admin mode because python does not
allow the port inspect test in user mode.

"""
from __future__ import absolute_import

import sys
import os
from smipyping import ServerSweep, TargetsData, DBTYPE, \
    create_sweep_argparser, parse_sweep_args

from smipyping._configfile import read_config

def main(prog_name):
    """
        Port sweep demo program
    """
    argparser = create_sweep_argparser(prog_name)
    args = parse_sweep_args(argparser)

    provider_data = None
    if args.config_file is not None:
        db_config = read_config(args.config_file, DBTYPE)
        db_config['directory'] = os.path.dirname(args.config_file)
        provider_data = TargetsData.factory(db_config, DBTYPE,
                                            args.verbose)
    else:
        provider_data = None

    # Sweep the servers and display result
    print('Start sweep for subnets %s, port %s, range %s:%s' %
          (args.subnet, args.port, args.min_octet_val, args.max_octet_val))
    print('The sweep may take several minutes')
    sweep = ServerSweep(args.subnet, args.port, provider_data=provider_data,
                        no_threads=args.no_threads,
                        min_octet_val=args.min_octet_val,
                        max_octet_val=args.max_octet_val,
                        verbose=args.verbose)

    open_servers = sweep.sweep_servers()

    sweep.print_open_hosts_report(open_servers)

if __name__ == '__main__':
    sys.exit(main(os.path.basename(sys.argv[0])))
